using System.Collections;
using UnityEngine;

// 총을 구현
public class Gun : MonoBehaviour {

    // 총의 상태를 표현하는 데 사용할 타입을 선언
    // 상수는 절대 변하지 않는 값 "const" 가 대표적
    // 밑의 타입은 열거형식이다
    public enum State {
        Ready, // 발사 준비됨
        Empty, // 탄창이 빔
        Reloading, // 재장전 중
    }

    // 프로퍼티
    public State state { get; private set; } // 현재 총의 상태

    public Transform fireTransform; // 탄알이 발사될 위치

    public ParticleSystem muzzleFlashEffect; // 총구 화염 효과
    public ParticleSystem shellEjectEffecct; // 탄피 배출 효과


    private LineRenderer bulletLineRenderrer; // 탄알 궤적을 그리기 위한 렌더러

    private AudioSource gunAudioPlayer; // 총 소리 재생기

    public GunData gunData; // 총의 현재 데이터

    private float fireDistance = 50f; // 사정거리

    public int ammoRemain = 100; // 남은 전체 탄알
    public int magAmmo; // 현재 탄창에 남아 있는 탄알

    private float lastFireTime; // 총을 마지막으로 발사한 시점

    private void Awake() {
        // 사용할 컴포넌트의 참조 가져오기
        gunAudioPlayer = GetComponent<AudioSource>();
        bulletLineRenderrer = GetComponent<LineRenderer>();

        // 사용할 점을 두 개로 변경
        bulletLineRenderrer.positionCount = 2;
        // 라인 렌더러를 비활성화
        bulletLineRenderrer.enabled = false;
    }

    private void OnEnable() {
        // 총 상태 초기화
        // 전체 예비 탄알 양을 초기화
        ammoRemain = gunData.startAmmoRemain;
        // 현재 탄창을 가득 채우기
        magAmmo = gunData.magCapacity;

        // 총의 현재 상태를 총을 쏠 준비가 된 상태로 변경
        state = State.Ready;
        // 마지막으로 총을 손 시점을 초기화
        lastFireTime = 0;
    }

    // 발사 시도
    public void Fire() {


    }

    // 실제 발사 처리
    private void Shot() {


    }

    // 발사 이펙트와 소리를 재생하고 탄알 궤적을 그림
    private IEnumerator ShotEffect(Vector3 hitPosition) {
        // 총구 화염 효과 재생
        muzzleFlashEffect.Play();
        // 탄피 배출 효과 재생
        shellEjectEffecct.Play();

        // 총격 소리 재생
        gunAudioPlayer.PlayOneShot(gunData.shotClip);
        // 선의 시작점은 총구의 위치
        bulletLineRenderrer.SetPosition(0, fireTransform.position);
        // 선의 끝점은 입력으로 들어온 충돌 위치
        bulletLineRenderrer.SetPosition(1, hitPosition);


        
        // 라인 랜더러를 활성화하여 탄알 궤적을 그림
        bulletLineRenderrer.enabled = true;

        // 0.03초 동안 잠시 처리를 대기
        yield return new WaitForSeconds(0.03f);

        // 라인 렌더러를 비활성화하여 탄알 궤적을 지움
        bulletLineRenderrer.enabled = false;
    }

    // 재장전 시도
    public bool Reload() {
        return false;
    }

    // 실제 재장전 처리를 진행
    private IEnumerator ReloadRoutine() {
        // 현재 상태를 재장전 중 상태로 전환
        state = State.Reloading;

        // 재장전 소요 시간만큼 처리 쉬기
        yield return new WaitForSeconds(gunData.reloadTime);

        // 총의 현재 상태를 발사 준비된 상태로 변경
        state = State.Ready;
    }
}
